#(1) independent island & mainland genealogies
#Qs -- is time in coal time units or generations? will just write it in genreations for now

import msprime


num_replicates = 30
demography = msprime.Demography()
demography.add_population(initial_size = 175000)
#instantaneous bottleneck
#using this because I'm not sure how to cap population size if I define a growth rate. should be fine.
demography.add_population_parameters_change(time = 1250, initial_size = 350)
demography.add_population_parameters_change(time = 1249, initial_size = 18500)
replicates = msprime.sim_ancestry(4, demography = demography, sequence_length = 10000000, num_replicates = num_replicates)
mts = msprime.sim_mutations(ts, model = 'JC69', rate = 0.1)



demography.add_population(initial_size = 175000)
ts = msprime.sim_ancestry(4, demography = demography, sequence_length = 1000)
mts = msprime.sim_mutations(ts, model = 'JC69', rate = 0.0000001)


#germany rho chr1: 0.001690
#grmany theta chr1: 0.001625
#germany ne(Payseur & Jing): 175,397
#mu: 9.265e-9
#r: 9.635e-9
#rho for approx the middle of chr1

chrom   chromStart      chromEnd        TP4     TP7     TP3     TP17    sample_mean     joint_decode
chr1    91000258        92000258        0.001323941680411254    0.001611326645078465    0.00146177286939982     0.001314878598022992    0.001427979957438252    0.0004892002119133856
chr1    92000258        93000258        0.001257442638896996    0.001622249249163214    0.001500487486769901    0.0014439149894206      0.001456023745111287    0.000538844402297595
chr1    93000258        94000258        0.001463921164133637    0.001698486817768825    0.001865521179230427    0.001491170032493465    0.001629774762187117    0.0003687955412949388
chr1    94000258        95000258        0.001431575970879021    0.001257400811003697    0.001643372400900434    0.001347725343688925    0.001420018630862043    0.000669442592649044
chr1    95000258        96000258        0.001625502137665241    0.001380260849600587    0.001471007286944971    0.001530411410639935    0.001501795416503798    0.0007553569923925452
chr1    96000258        97000258        0.001317889076866503    0.001201612091920309    0.001175082167700401    0.001451110634466335    0.001286423491741318    0.0004386501836256907
chr1    97000258        98000258        0.001429335400658676    0.001339499788366387    0.001279245312556151    0.001543948807258905    0.001398007894048169    0.0002071367214187547
chr1    98000258        99000258        0.001567296174464418    0.001413323324541096    0.001866014038338047    0.00172596210521595     0.001643148990085479    0.0006112085694342555
chr1    99000258        100000258       0.00150314556013321     0.001141041472761022    0.001934388054484877    0.001454286602940148    0.001508215448262391    0.0004803204777455817
chr1    100000258       101000258       0.001443708632432215    0.001493260670118716    0.001487501439518578    0.0016006092424911      0.001506270272403724    0.0003711803339274032

0.001427979957438252
0.001456023745111287
0.001629774762187117
0.001420018630862043
0.001501795416503798
0.001286423491741318
0.001398007894048169
0.001643148990085479
0.001508215448262391
0.001506270272403724


ls = [0.001427979957438252, 0.001456023745111287, 0.001629774762187117, 0.001420018630862043, 0.001501795416503798, 0.001286423491741318, 0.001398007894048169, 0.001643148990085479, 0.001508215448262391, 0.001506270272403724]

r:
[8.1414160871523e-09, 8.301303586214627e-09, 9.291919258522762e-09, 8.0960257636222e-09, 8.562263986862933e-09, 7.334352877992885e-09, 7.970534809877985e-09, 9.368170436697772e-09, 8.598866846424917e-09, 8.587776714560249e-09]

rate_map = msprime.RateMap(position = [0, 1000000, 2000000, 3000000, 4000000, 5000000, 6000000, 7000000, 8000000, 9000000, 10000000], rate = [8.1414160871523e-09, 8.301303586214627e-09, 9.291919258522762e-09, 8.0960257636222e-09, 8.562263986862933e-09, 7.334352877992885e-09, 7.970534809877985e-09, 9.368170436697772e-09, 8.598866846424917e-09, 8.587776714560249e-09])
ts = msprime.sim_ancestry(4, recombination_rate=rate_map, demography = demography, sequence_length = 1000)
